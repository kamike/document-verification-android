apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'



repositories {
    maven { url 'https://maven.google.com' }
    maven { url 'https://raw.githubusercontent.com/iProov/android/master/maven/' }
    maven { url 'https://raw.githubusercontent.com/Acuant/AndroidSdkMaven/main/maven/' }
}


android {
    compileSdkVersion 29
    buildToolsVersion '30.0.3'
    defaultConfig {
        applicationId 'com.acuant.trulioosampleapp'
        minSdkVersion 28
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildscript {
        ext.kotlin_version = '1.3.0'
    }
    splits {
        abi {
            enable true
            reset()
            include "armeabi", "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
            universalApk false
        }
    }


    project.ext.versionCodes = ['armeabi': 1, 'armeabi-v7a': 2, 'arm64-v8a': 3, 'x86': 4, 'x86_64': 5]

    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.versionCodeOverride =
                    project.ext.versionCodes.get(output.getFilter(
                            com.android.build.OutputFile.ABI), 0) * 100000000 + android.defaultConfig.versionCode
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    lintOptions {
        abortOnError false
    }

}

dependencies {
    //implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:exifinterface:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.google.android.gms:play-services-vision:15.0.2'
    implementation 'com.android.support:design:28+'

    implementation group: 'com.trulioo', name: 'normalizedapi', version: '1.0.2.1'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.0"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    //iproov
    implementation('com.iproov.sdk:iproov:5.2.1@aar') {
        transitive = true
    }

    implementation('org.jmrtd:jmrtd:0.7.15') {
        transitive = true;
    }
    implementation('org.ejbca.cvc:cert-cvc:1.4.6') {
        transitive = true;
    }
    implementation('org.bouncycastle:bcprov-jdk15on:1.61') {
        transitive = true;
    }
    implementation('net.sf.scuba:scuba-sc-android:0.0.18') {
        transitive = true;
    }

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.3'

    implementation 'com.rmtheis:tess-two:9.0.0'

    implementation "com.acuant:acuantcommon:$acuantSDKVersion"
    implementation "com.acuant:acuantcamera:$acuantSDKVersion"
    implementation "com.acuant:acuantimagepreparation:$acuantSDKVersion"
    implementation "com.acuant:acuantdocumentprocessing:$acuantSDKVersion"
    implementation "com.acuant:acuantechipreader:$acuantSDKVersion"
    implementation "com.acuant:acuantfacematch:$acuantSDKVersion"
    implementation "com.acuant:acuanthgliveness:$acuantSDKVersion"
    implementation ("com.acuant:acuantipliveness:$acuantSDKVersion"){
        transitive = true
    }
    implementation "com.acuant:acuantfacecapture:$acuantSDKVersion"
    implementation "com.acuant:acuantpassiveliveness:$acuantSDKVersion"


    implementation 'com.blankj:utilcode:1.29.0'
}